


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ***********************
    2 00000000         ; (c) Copyright 2008-2013 Microsemi SoC Products Group. 
                       All rights reserved.
    3 00000000         ; 
    4 00000000         ; SVN $Revision: 5258 $
    5 00000000         ; SVN $Date: 2013-03-21 12:41:02 +0000 (Thu, 21 Mar 2013
                       ) $
    6 00000000         ;
    7 00000000         
    8 00000000                 AREA             |.text|, CODE, READONLY
    9 00000000                 EXPORT           HW_set_32bit_reg
   10 00000000                 EXPORT           HW_get_32bit_reg
   11 00000000                 EXPORT           HW_set_32bit_reg_field
   12 00000000                 EXPORT           HW_get_32bit_reg_field
   13 00000000                 EXPORT           HW_set_16bit_reg
   14 00000000                 EXPORT           HW_get_16bit_reg
   15 00000000                 EXPORT           HW_set_16bit_reg_field
   16 00000000                 EXPORT           HW_get_16bit_reg_field
   17 00000000                 EXPORT           HW_set_8bit_reg
   18 00000000                 EXPORT           HW_get_8bit_reg
   19 00000000                 EXPORT           HW_set_8bit_reg_field
   20 00000000                 EXPORT           HW_get_8bit_reg_field
   21 00000000         
   22 00000000         ;-------------------------------------------------------
                       -----------------------
   23 00000000         ; R0:   addr_t reg_addr
   24 00000000         ; R1:   uint32_t value
   25 00000000         ;
   27 00000000         HW_set_32bit_reg
                               PROC
   28 00000000 6001            STR              R1, [R0]
   29 00000002 4770            BX               LR
   30 00000004                 ENDP
   31 00000004         
   32 00000004         ;-------------------------------------------------------
                       -----------------------
   33 00000004         ; R0:   addr_t reg_addr
   34 00000004         ;      
   36 00000004         HW_get_32bit_reg
                               PROC
   37 00000004 6800            LDR              R0, [R0]
   38 00000006 4770            BX               LR
   39 00000008                 ENDP
   40 00000008         
   41 00000008         ;-------------------------------------------------------
                       -----------------------
   42 00000008         ; R0:   addr_t reg_addr
   43 00000008         ; R1:   int_fast8_t shift
   44 00000008         ; R2:   uint32_t mask
   45 00000008         ; R3:   uint32_t value
   46 00000008         ;
   48 00000008         HW_set_32bit_reg_field
                               PROC
   49 00000008 B50E            PUSH             {R1,R2,R3,LR}
   50 0000000A FA03 F301       LSL.W            R3, R3, R1
   51 0000000E EA03 0302       AND.W            R3, R3, R2
   52 00000012 6801            LDR              R1, [R0]
   53 00000014 EA6F 0202       MVN.W            R2, R2



ARM Macro Assembler    Page 2 


   54 00000018 EA01 0102       AND.W            R1, R1, R2
   55 0000001C EA41 0103       ORR.W            R1, R1, R3
   56 00000020 6001            STR              R1, [R0]
   57 00000022 BD0E            POP              {R1,R2,R3,PC}
   58 00000024                 ENDP
   59 00000024         
   60 00000024         ;-------------------------------------------------------
                       -----------------------
   61 00000024         ; R0:   addr_t reg_addr
   62 00000024         ; R1:   int_fast8_t shift
   63 00000024         ; R2:   uint32_t mask
   64 00000024         ;
   66 00000024         HW_get_32bit_reg_field
                               PROC
   67 00000024 6800            LDR              R0, [R0]
   68 00000026 EA00 0002       AND.W            R0, R0, R2
   69 0000002A FA20 F001       LSR.W            R0, R0, R1
   70 0000002E 4770            BX               LR
   71 00000030                 ENDP
   72 00000030         
   73 00000030         ;-------------------------------------------------------
                       -----------------------
   74 00000030         ; R0:   addr_t reg_addr
   75 00000030         ; R1:   uint_fast16_t value
   76 00000030         ;
   78 00000030         HW_set_16bit_reg
                               PROC
   79 00000030 8001            STRH             R1, [R0]
   80 00000032 4770            BX               LR
   81 00000034                 ENDP
   82 00000034         
   83 00000034         ;-------------------------------------------------------
                       -----------------------
   84 00000034         ; R0:   addr_t reg_addr
   85 00000034         ;
   87 00000034         HW_get_16bit_reg
                               PROC
   88 00000034 8800            LDRH             R0, [R0]
   89 00000036 4770            BX               LR
   90 00000038                 ENDP
   91 00000038         
   92 00000038         ;-------------------------------------------------------
                       -----------------------
   93 00000038         ; R0:   addr_t reg_addr
   94 00000038         ; R1:   int_fast8_t shift
   95 00000038         ; R2:   uint_fast16_t mask
   96 00000038         ; R3:   uint_fast16_t value
   97 00000038         ;
   99 00000038         HW_set_16bit_reg_field
                               PROC
  100 00000038 B50E            PUSH             {R1,R2,R3,LR}
  101 0000003A FA03 F301       LSL.W            R3, R3, R1
  102 0000003E EA03 0302       AND.W            R3, R3, R2
  103 00000042 8801            LDRH             R1, [R0]
  104 00000044 EA6F 0202       MVN.W            R2, R2
  105 00000048 EA01 0102       AND.W            R1, R1, R2
  106 0000004C EA41 0103       ORR.W            R1, R1, R3
  107 00000050 8001            STRH             R1, [R0]
  108 00000052 BD0E            POP              {R1,R2,R3,PC}



ARM Macro Assembler    Page 3 


  109 00000054                 ENDP
  110 00000054         
  111 00000054         ;-------------------------------------------------------
                       -----------------------
  112 00000054         ; R0:   addr_t reg_addr
  113 00000054         ; R1:   int_fast8_t shift
  114 00000054         ; R2:   uint_fast16_t mask
  115 00000054         ;
  117 00000054         HW_get_16bit_reg_field
                               PROC
  118 00000054 8800            LDRH             R0, [R0]
  119 00000056 EA00 0002       AND.W            R0, R0, R2
  120 0000005A FA20 F001       LSR.W            R0, R0, R1
  121 0000005E 4770            BX               LR
  122 00000060                 ENDP
  123 00000060         
  124 00000060         ;-------------------------------------------------------
                       -----------------------
  125 00000060         ; R0:   addr_t reg_addr
  126 00000060         ; R1:   uint_fast8_t value
  127 00000060         ;
  129 00000060         HW_set_8bit_reg
                               PROC
  130 00000060 7001            STRB             R1, [R0]
  131 00000062 4770            BX               LR
  132 00000064                 ENDP
  133 00000064         
  134 00000064         ;-------------------------------------------------------
                       -----------------------
  135 00000064         ; R0:   addr_t reg_addr
  136 00000064         ;
  138 00000064         HW_get_8bit_reg
                               PROC
  139 00000064 7800            LDRB             R0, [R0]
  140 00000066 4770            BX               LR
  141 00000068                 ENDP
  142 00000068         
  143 00000068         ;-------------------------------------------------------
                       -----------------------
  144 00000068         ; R0:   addr_t reg_addr,
  145 00000068         ; R1:   int_fast8_t shift
  146 00000068         ; R2:   uint_fast8_t mask
  147 00000068         ; R3:   uint_fast8_t value
  148 00000068         ;
  150 00000068         HW_set_8bit_reg_field
                               PROC
  151 00000068 B50E            PUSH             {R1,R2,R3,LR}
  152 0000006A FA03 F301       LSL.W            R3, R3, R1
  153 0000006E EA03 0302       AND.W            R3, R3, R2
  154 00000072 7801            LDRB             R1, [R0]
  155 00000074 EA6F 0202       MVN.W            R2, R2
  156 00000078 EA01 0102       AND.W            R1, R1, R2
  157 0000007C EA41 0103       ORR.W            R1, R1, R3
  158 00000080 7001            STRB             R1, [R0]
  159 00000082 BD0E            POP              {R1,R2,R3,PC}
  160 00000084                 ENDP
  161 00000084         
  162 00000084         ;-------------------------------------------------------
                       -----------------------



ARM Macro Assembler    Page 4 


  163 00000084         ; R0:   addr_t reg_addr
  164 00000084         ; R1:   int_fast8_t shift
  165 00000084         ; R2:   uint_fast8_t mask
  166 00000084         ;
  168 00000084         HW_get_8bit_reg_field
                               PROC
  169 00000084 7800            LDRB             R0, [R0]
  170 00000086 EA00 0002       AND.W            R0, R0, R2
  171 0000008A FA20 F001       LSR.W            R0, R0, R1
  172 0000008E 4770            BX               LR
  173 00000090                 ENDP
  174 00000090         
  175 00000090                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\hw_reg_access.d -o.\objects\hw_reg_access.o -IC:\Users\A
ndersonHan\Desktop\BentoBox\Keil_CoreBoard\Project\BetoBox\RTE -IC:\Users\Ander
sonHan\Desktop\BentoBox\Keil_CoreBoard\Project\BetoBox\RTE\Device\M2S010 -IC:\K
eil_v5\ARM\PACK\Microsemi\M2Sxxx\1.0.61\CMSIS -IC:\Keil_v5\ARM\PACK\Microsemi\M
2Sxxx\1.0.61\CMSIS\startup_arm -IC:\Keil_v5\ARM\PACK\Microsemi\M2Sxxx\1.0.61\ha
l -IC:\Keil_v5\ARM\PACK\Microsemi\M2Sxxx\1.0.61\hal\CortexM3 -IC:\Keil_v5\ARM\P
ACK\Microsemi\M2Sxxx\1.0.61\hal\CortexM3\Keil -IC:\Keil_v5\ARM\CMSIS\Include --
predefine="__MICROLIB SETA 1" --predefine="__UVISION_VERSION SETA 518" --predef
ine="_RTE_ SETA 1" --list=.\listings\hw_reg_access.lst RTE\Device\M2S010\hw_reg
_access.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 8 in file RTE\Device\M2S010\hw_reg_access.s
   Uses
      None
Comment: .text unused
HW_get_16bit_reg 00000034

Symbol: HW_get_16bit_reg
   Definitions
      At line 87 in file RTE\Device\M2S010\hw_reg_access.s
   Uses
      At line 14 in file RTE\Device\M2S010\hw_reg_access.s
Comment: HW_get_16bit_reg used once
HW_get_16bit_reg_field 00000054

Symbol: HW_get_16bit_reg_field
   Definitions
      At line 117 in file RTE\Device\M2S010\hw_reg_access.s
   Uses
      At line 16 in file RTE\Device\M2S010\hw_reg_access.s
Comment: HW_get_16bit_reg_field used once
HW_get_32bit_reg 00000004

Symbol: HW_get_32bit_reg
   Definitions
      At line 36 in file RTE\Device\M2S010\hw_reg_access.s
   Uses
      At line 10 in file RTE\Device\M2S010\hw_reg_access.s
Comment: HW_get_32bit_reg used once
HW_get_32bit_reg_field 00000024

Symbol: HW_get_32bit_reg_field
   Definitions
      At line 66 in file RTE\Device\M2S010\hw_reg_access.s
   Uses
      At line 12 in file RTE\Device\M2S010\hw_reg_access.s
Comment: HW_get_32bit_reg_field used once
HW_get_8bit_reg 00000064

Symbol: HW_get_8bit_reg
   Definitions
      At line 138 in file RTE\Device\M2S010\hw_reg_access.s
   Uses
      At line 18 in file RTE\Device\M2S010\hw_reg_access.s
Comment: HW_get_8bit_reg used once
HW_get_8bit_reg_field 00000084

Symbol: HW_get_8bit_reg_field
   Definitions
      At line 168 in file RTE\Device\M2S010\hw_reg_access.s
   Uses
      At line 20 in file RTE\Device\M2S010\hw_reg_access.s
Comment: HW_get_8bit_reg_field used once
HW_set_16bit_reg 00000030

Symbol: HW_set_16bit_reg



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 78 in file RTE\Device\M2S010\hw_reg_access.s
   Uses
      At line 13 in file RTE\Device\M2S010\hw_reg_access.s
Comment: HW_set_16bit_reg used once
HW_set_16bit_reg_field 00000038

Symbol: HW_set_16bit_reg_field
   Definitions
      At line 99 in file RTE\Device\M2S010\hw_reg_access.s
   Uses
      At line 15 in file RTE\Device\M2S010\hw_reg_access.s
Comment: HW_set_16bit_reg_field used once
HW_set_32bit_reg 00000000

Symbol: HW_set_32bit_reg
   Definitions
      At line 27 in file RTE\Device\M2S010\hw_reg_access.s
   Uses
      At line 9 in file RTE\Device\M2S010\hw_reg_access.s
Comment: HW_set_32bit_reg used once
HW_set_32bit_reg_field 00000008

Symbol: HW_set_32bit_reg_field
   Definitions
      At line 48 in file RTE\Device\M2S010\hw_reg_access.s
   Uses
      At line 11 in file RTE\Device\M2S010\hw_reg_access.s
Comment: HW_set_32bit_reg_field used once
HW_set_8bit_reg 00000060

Symbol: HW_set_8bit_reg
   Definitions
      At line 129 in file RTE\Device\M2S010\hw_reg_access.s
   Uses
      At line 17 in file RTE\Device\M2S010\hw_reg_access.s
Comment: HW_set_8bit_reg used once
HW_set_8bit_reg_field 00000068

Symbol: HW_set_8bit_reg_field
   Definitions
      At line 150 in file RTE\Device\M2S010\hw_reg_access.s
   Uses
      At line 19 in file RTE\Device\M2S010\hw_reg_access.s
Comment: HW_set_8bit_reg_field used once
13 symbols
346 symbols in table
